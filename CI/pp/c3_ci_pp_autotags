#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
use strict;
use warnings;

binmode STDIN, ':utf8';
binmode STDOUT, ':utf8';
binmode STDERR, ':utf8';

$|++;

use MYDB;
use FindBin qw( $RealBin );
use MYDan::Util::OptConf;
use YAML::XS;
use Encode;
use IPC::Open3;

=head1 SYNOPSIS

 echo 'project yaml' | $0

=cut

local $/ = undef;
my $input = Encode::encode('utf8', <STDIN> );
my %project = %{ YAML::XS::Load( $input ) };
local $/ = "\n";

my $addr = $project{addr};

my $pipe = 'c3_ci_pp_svntags';
$pipe = 'c3_ci_pp_gittags' if $addr =~ /git@/ || $addr =~ /\.git/ || $addr =~ /http:\/\/git/ || $addr =~ /https:\/\/git/;
$pipe = "fileserver" if $addr eq 'openc3://*';
 
$ENV{PATH} = "$ENV{PATH}:/data/Software/mydan/CI/pp:/data/Software/mydan/JOB/pp";

if( $pipe eq 'fileserver' )
{
    my @version = `c3_job_pp_fileserver name --filter "projectid='$project{groupid}' and status='available'"`;
    chomp @version;
    map{ printf "$project{id} %s\n", Encode::decode('utf8', $_ ); }@version;
    exit;
}

my $chld_in;
my $pid = IPC::Open3::open3( $chld_in, '>&STDOUT', '>&STDERR', $pipe);
 
print $chld_in $input;
$chld_in = undef;
waitpid( $pid, 0 );
exit $? >> 8;
