#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
use strict;
use warnings;
use uuid;
use POSIX;

binmode STDIN, ':utf8';
binmode STDOUT, ':utf8';
binmode STDERR, ':utf8';

$|++;

use MYDB;
use FindBin qw( $RealBin );
use MYDan::Util::OptConf;
use YAML::XS;
use Encode;

=head1 SYNOPSIS

 $0 projectid version

=cut

my $db = MYDB->new( "$RealBin/../conf/conn" );

sub save
{
    my ( $id, $version ) = split /\s+/, shift , 2;

    my $v = eval{ $db->query( "select `name` from openc3_ci_version where projectid='$id' and name='$version'" ); };
    die "get verions list from database fail: $@" if $@;

    if( @$v > 0 )
    {
        print "archived $version\n";
        return;
    }
  
    print "new $version\n";

    my ( $status, $reason ) =  ( 'init', '' );
    my $uuid = uuid->new()->create_str;
    eval{ $db->execute( "insert into openc3_ci_version (`projectid`,`name`,`status`,`calltype`,`user`,`uuid`,`slave`,`reason`) 
            values('$id','$version','$status','findtags','crontab','$uuid','','$reason')" ); };       

    my $finishtime = POSIX::strftime( "%Y-%m-%d %H:%M:%S", localtime );
    eval{ $db->execute( "update `openc3_ci_project` set last_findtags_success='$finishtime' where id='$id'" ); };
    die "update project info fail:$@"  if $@;
}

map{ chomp; save($_) }@ARGV ? "$ARGV[0] $ARGV[1]" : <STDIN>;
