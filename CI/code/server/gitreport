#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
use strict;
use warnings;
use Logs;
use Code;
use Digest::MD5;
use YAML::XS;
use File::Temp;
use POSIX;
use Carp;

$| ++;

=head1 SYNOPSIS

    db => $mysql,

=cut

return sub
{
    my %param = @_;

    my ( $db ) = ( $param{db} );

    my $x = eval{ $db->query( "select id,ticket from openc3_ci_ticket where type='SSHKey'" ) };
    confess( "mysql query fail: $@" ) if $@;
    my %ticket; map{ $ticket{$_->[0]} = $_->[1] }@$x;

    my @col = qw( groupid id addr ticketid );
    $x = eval{ $db->query( sprintf( "select %s from openc3_ci_project where status=1", join ',', map{"`$_`"}@col ), \@col ) };
    confess( "mysql query fail: $@" ) if $@;

    my %report;
    map{
        $report{$_->{groupid}}{$_->{id}} = +{ %$_, uuid => Digest::MD5->new()->add( YAML::XS::Dump $_ )->hexdigest(), ticket => ( $_->{ticketid} && $ticket{$_->{ticketid}} ) ? $ticket{$_->{ticketid}} : undef  }
            if $_->{addr} =~ /git@/ || $_->{addr} =~ /\.git/ || $_->{addr} =~ /http:\/\/git/ || $_->{addr} =~ /https:\/\/git/;
    }@$x;

    my $basepath = "/data/.gitreport.temp";
    system "mkdir -p '$basepath'" unless -d $basepath;

    my $gitpull = eval{ Code->new( 'server/gitreport.plugin/gitpull' ) };
    die "load gitpull code fail: $@" if $@;
    my $statistics = eval{ Code->new( 'server/gitreport.plugin/statistics' ) };
    die "load gitpull code fail: $@" if $@;

    my %invalidcommit;
    my $date = POSIX::strftime( "%Y-%m-%d", localtime( time - 86400 ) ) ;

    my ( $watch, $WATCHTEMP, $watchtempfile );
    if( -f "/data/glusterfs/gitreport/4000000000.watch" )
    {
        ( $WATCHTEMP, $watchtempfile ) = File::Temp::tempfile();
        $watch = 1;
    }
 
    for my $groupid ( keys %report )
    {
        my $grouppath = "$basepath/$groupid";
        system "mkdir -p '$grouppath'" unless -d $grouppath;

        my %data;
        for my $projectid ( keys %{$report{$groupid}} )
        {
            eval{ $gitpull->run( path => "$grouppath", %{$report{$groupid}{$projectid}} ); };
            warn "gitpull fail:$@" if $@;

            my $data = eval{ $statistics->run( path => "$grouppath", %{$report{$groupid}{$projectid}}, date => $date ); };
            warn "statistics fail:$@" if $@;

            %data = ( %data, %$data ) if $data && ref $data eq 'HASH';
        }

        my ( $TEMP, $tempfile ) = File::Temp::tempfile();

        for my $uuid ( sort{ $data{$a}{time} cmp $data{$b}{time} }keys %data )
        {
            my $v = $data{$uuid};
            print $TEMP sprintf "$v->{time}:$uuid:%s:$v->{user}:$v->{add}:$v->{del}:%s\n", ( $invalidcommit{$uuid} ? 'No': 'Yes' ),  join ',', sort keys %{$v->{path}};
            print( $WATCHTEMP sprintf "$v->{time}:$uuid:%s:$v->{user}:$v->{add}:$v->{del}:%s\n", ( $invalidcommit{$uuid} ? 'No': 'Yes' ),  join ',', sort keys %{$v->{path}} ) if $watch;
        }

        close $TEMP;
        my $dstpath = "/data/glusterfs/gitreport/$groupid";
        system "mkdir -p '$dstpath'" unless -d $dstpath;

        system( "cp '$tempfile' '$dstpath/$date.week'" ) if 1 == POSIX::strftime( "%u", localtime );
        system "mv '$tempfile' '$dstpath/current'";

        if( 15 == POSIX::strftime( "%d", localtime ) )
        {
            my $year = POSIX::strftime( "%Y", localtime( time - ( 30 * 86400 )) );
            my $month = POSIX::strftime( "%Y-%m", localtime( time - ( 30 * 86400 )) );
            system "cat $dstpath/$year-*.week|grep ^$month > $dstpath/$month.month";
            system "cat $dstpath/$year-*.month > $dstpath/$year.year";
        }
    }

    if( $watch )
    {
        my $dstpath = "/data/glusterfs/gitreport/4000000000";
        system "mkdir -p '$dstpath'" unless -d $dstpath;
        close $WATCHTEMP;
        system( "cp '$watchtempfile' '$dstpath/$date.week'" ) if 1 == POSIX::strftime( "%u", localtime );
        system "mv '$watchtempfile' '$dstpath/current'";

        if( 15 == POSIX::strftime( "%d", localtime ) )
        {
            my $year = POSIX::strftime( "%Y", localtime( time - ( 30 * 86400 )) );
            my $month = POSIX::strftime( "%Y-%m", localtime( time - ( 30 * 86400 )) );
            system "cat $dstpath/$year-*.week|grep ^$month > $dstpath/$month.month";
            system "cat $dstpath/$year-*.month > $dstpath/$year.year";
        }
    }
}
