#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
use strict;
use warnings;
use JSON;
use Logs;
use LWP::UserAgent;
use Encode;
use Util;

$| ++;

=head1 SYNOPSIS

    db => $mysql,
    logs => 日志对象
=cut

return sub
{
    my %param = @_;
    my ( $logs, $projectid, $groupid, $version ) = @param{qw( logs projectid groupid version )};
    print '=' x 75, "\n";
    print "calltestenv...\n";

    $logs = Logs->new( 'code.build.send.calltestenv' ) unless $logs;

    my ( $jobname, $jobgroup ) = ( '_ci_' . $projectid . '_', '_ci_test_' . $projectid . '_');

    my $uuid = `c3_jobx_pp_runtask $groupid $jobname  $jobgroup --variablekv version=$version,_jobtype_=test`;
    chomp $uuid;

    printf "call jobx ok: jobxuuid:%s\n", $uuid;

    print "wait test env finish...\n";

    while(1)
    {

        my $status = `c3_jobx_pp_tasks status --filter "uuid='$uuid'"`;
        chomp $status;
        return if $status eq 'success';

        $logs->die( "jobx status fail" ) if $status eq 'fail';

        print "#";
        sleep 3;
    }
    print "\n";
}
