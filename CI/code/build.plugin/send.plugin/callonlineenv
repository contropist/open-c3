#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
use strict;
use warnings;
use JSON;
use Logs;
use LWP::UserAgent;
use Encode;
use Util;

$| ++;

=head1 SYNOPSIS

    db => $mysql,
    logs => 日志对象
=cut

return sub
{
    my %param = @_;
    my ( $logs, $projectid, $groupid, $version ) = @param{qw( logs projectid groupid version )};
    print '=' x 75, "\n";
    print "callonlineenv...\n";

    $logs = Logs->new( 'code.build.send.callonlineenv' ) unless $logs;

    my ( $jobname, $jobgroup ) = ( '_ci_' . $projectid . '_', '_ci_online_' . $projectid . '_');


    my $lastversionres = `c3_jobx_pp_flowlinesversion  version --filter 'flowlineid=$projectid'`;
    chomp $lastversionres;

    my $variablekv = "version=$version,_jobtype_=online,_appname_=_ci_${projectid}_";
    $variablekv .= ",_rollbackVersion_=$lastversionres";

    my $uuid = `c3_jobx_pp_runtask $groupid $jobname  $jobgroup --variablekv $variablekv`;
    chomp $uuid;

    printf "call jobx ok: jobxuuid:%s\n", $uuid;
}
